events {
    worker_connections 4096;
}

http {

    upstream voteapp {
        server 127.0.0.1:3000;
    }

    upstream resultsapp {
        server 127.0.0.1:8000;
    }

    #Set HTTP server to redirect to HTTPS server
    server{
        listen 80;
        server_name web.candidate-172.immuta.io;
        return 301 https://$server_name$request_uri;
    }
    
    #Set HTTPS server
    server{
        listen 443 ssl http2 default_server;
        server_name web.candidate-172.immuta.io;
        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/nginx.access.log;

        #Define SSL parameters to follow modern protocols, ciphers, etc.
        ssl on;
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        #Only support TLS protocols
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        proxy_set_header    X-Real-IP        $remote_addr;
        proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header    Host           $host;
        proxy_set_header    X-Forwarded-Proto $scheme;

        location /vote/ {
            #Set protocol and address of proxy server and pass header fields
            proxy_pass  http://voteapp/;
        }

        location /results/ {
            proxy_pass  http://resultsapp/;
        }

        location /cake/ {
            proxy_pass  http://voteapp/cake;
        }

        location /pie/ {
            proxy_pass  http://voteapp/pie;
        }
    }
}